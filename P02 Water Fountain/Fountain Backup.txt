//////////////// FILE HEADER (INCLUDE IN EVERY FILE) //////////////////////////
//
// Title:    Fountain
// Course:   CS 300 Spring 2022
//
// Author:   Steven Ren
// Email:    skren@wisc.edu
// Lecturer: Mouna Kacem
//
//////////////////// PAIR PROGRAMMERS COMPLETE THIS SECTION ///////////////////
//
// Partner Name:    (name of your pair programming partner)
// Partner Email:   (email address of your programming partner)
// Partner Lecturer's Name: (name of your partner's lecturer)
//
// VERIFY THE FOLLOWING BY PLACING AN X NEXT TO EACH TRUE STATEMENT:
//   ___ Write-up states that pair programming is allowed for this assignment.
//   ___ We have both read and understand the course Pair Programming Policy.
//   ___ We have registered our team prior to the team registration deadline.
//
///////////////////////// ALWAYS CREDIT OUTSIDE HELP //////////////////////////
//
// Persons:         NONE
// Online Sources:  NONE
//
///////////////////////////////////////////////////////////////////////////////

import java.util.Random;
import java.io.File;
import processing.core.PImage;

public class Fountain {

    private static Random randGen() {
        Random rand = new Random();
        return rand;
    }

    private static PImage fountainImage;

    private static int positionX;

    private static int positionY;

    private static Droplet[] droplets;

    private static void updateDroplet(int index) {
        float newDropletPositionX = droplets[index].getPositionX() + droplets[index].getVelocityX();
        droplets[index].setPositionX(newDropletPositionX);

        float newDropletPositionY = droplets[index].getPositionY() + droplets[index].getVelocityY();
        droplets[index].setPositionY(newDropletPositionY);

        droplets[index].setVelocityY(droplets[index].getVelocityY() + 0.3f);

        Utility.fill(Utility.color(23,141,235));

        Utility.circle(droplets[index].getPositionX(), droplets[index].getPositionY(),
                droplets[index].getSize());
    }

    public static void main(String[] args) {
        Utility.runApplication(); // starts the application

    }

    public static void setup() {
        int randNum = randGen().nextInt();
        positionX = Utility.width()/2;
        positionY = Utility.height()/2;

        // load the image of the fountain
        fountainImage = Utility.loadImage("images" + File.separator + "fountain.png");

        droplets = new Droplet[800];
        droplets[0] = new Droplet();

        droplets[0].setVelocityX(-6);
        droplets[0].setVelocityY(-6);
    }

    public static void draw() {
        Utility.background(Utility.color(253,245,230));
        Utility.fill(Utility.color(23,141,235));

        // Draw the fountain image to the screen at position (positionX, positionY)
        Utility.image(fountainImage, positionX, positionY);

        Utility.circle(droplets[0].getPositionX(), droplets[0].getPositionY(),
                droplets[0].getSize());

        droplets[0].setVelocityY(droplets[0].getVelocityY() + 0.3f);

        float newDropletPositionX = droplets[0].getPositionX() + droplets[0].getVelocityX();
        droplets[0].setPositionX(newDropletPositionX);

        float newDropletPositionY = droplets[0].getPositionY() + droplets[0].getVelocityY();
        droplets[0].setPositionY(newDropletPositionY);
    }
}
